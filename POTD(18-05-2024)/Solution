class Solution {
    public int findPeakElement(List<Integer> a) {
        int n = a.size();
        int low = 0, high = n - 1;
        
        while (low <= high) {
            int mid = low + (high - low) / 2;
            
            // Check if mid is the peak element
            if ((mid == 0 || a.get(mid) >= a.get(mid - 1)) &&
                (mid == n - 1 || a.get(mid) >= a.get(mid + 1))) {
                return a.get(mid);
            }
            
            // If the element is in the increasing part of the array
            if (mid > 0 && a.get(mid) < a.get(mid - 1)) {
                high = mid - 1;
            } else { // If the element is in the decreasing part of the array
                low = mid + 1;
            }
        }
        
        // This statement should never be reached
        return -1;
    }
}
