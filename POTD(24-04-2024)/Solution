class Solution {
    public static int ways(int x, int y) {
        int MOD = 1000000007;
        int[][] dp = new int[x + 1][y + 1];

        // Base case: There is 1 path from (0, 0) to (0, 0)
        dp[0][0] = 1;

        // Fill the first row (moving left from (x, 0))
        for (int i = 1; i <= x; i++) {
            dp[i][0] = 1;
        }

        // Fill the first column (moving down from (0, y))
        for (int j = 1; j <= y; j++) {
            dp[0][j] = 1;
        }

        // Fill the remaining cells
        for (int i = 1; i <= x; i++) {
            for (int j = 1; j <= y; j++) {
                dp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % MOD;
            }
        }

        return dp[x][y];
    }
}
