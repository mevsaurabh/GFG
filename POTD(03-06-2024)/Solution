class Solution {
    private static final long MOD = 1000000007;

    public long power(long a, long b) {
        long ans = 1;
        while (b > 0) {
            if ((b & 1) == 1) {
                ans *= a;
                ans %= MOD;
            }
            a *= a;
            a %= MOD;
            b >>= 1;
        }
        return ans;
    }

    public int numberOfConsecutiveOnes(int n) {
        long[] a = new long[n];
        long[] b = new long[n];

        a[0] = 1;
        b[0] = 1;

        for (int i = 1; i < n; i++) {
            a[i] = (a[i - 1] + b[i - 1]) % MOD;
            b[i] = a[i - 1];
        }

        return (int) ((power(2, n) + MOD - (a[n - 1] + b[n - 1]) % MOD) % MOD);
    }
}
