import java.util.ArrayList;

class Solution {
    public static ArrayList<Integer> getPrimes(int n) {
        if (n <= 3) {
            ArrayList<Integer> result = new ArrayList<>();
            if (n == 2) {
                result.add(2);
                result.add(-1);
                return result;
            } else if (n == 3) {
                result.add(3);
                result.add(-1);
                return result;
            } else {
                result.add(-1);
                result.add(-1);
                return result;
            }
        }

        boolean[] primes = new boolean[n + 1];
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (!primes[i]) {
                for (int j = i * i; j <= n; j += i) {
                    primes[j] = true;
                }
            }
        }

        ArrayList<Integer> primesArray = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (!primes[i]) {
                primesArray.add(i);
            }
        }

        for (int i = 0; i < primesArray.size(); i++) {
            int a = primesArray.get(i);
            int b = n - a;
            if (b >= a && !primes[b]) {
                ArrayList<Integer> result = new ArrayList<>();
                result.add(a);
                result.add(b);
                return result;
            }
        }

        ArrayList<Integer> result = new ArrayList<>();
        result.add(-1);
        result.add(-1);
        return result;
    }
}
